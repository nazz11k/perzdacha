/*Згенерувати цілочисельну квадратну матрицю M розмірності m, яка містить як додатні, так і від’ємні елементи із діапазону [-190, 500].
 * Серед стовпців матриці М, що містять від’ємні елементи на головній діагоналі, знайти "особливий" елемент матриці,
 * вважаючи "особливим" елемент, сума цифр якого є мінімальною.
 * Якщо таких елементів декілька, то, як "особливий", прийняти перший із них.
 * Переставити місцями рядок матриці М, що містить знайдений елемент, і останній її рядок.
 * На основі отриманої матриці створити масив із двох рядків, де перший рядок - це послідовність, розділених пробілом,
 * елементів головної діагоналі вхідної матриці, а другий - послідовність, розділених пробілом, елементів її побічної діагоналі.
 * У кожному рядку отриманого масиву рядків переставити числа таким чином, щоб спочатку йшли від’ємні числа, а потім додатні (із збереженням порядку їх слідування)
*/

#include "liba.h"

int main() {
    int m;
    cout<<"Enter a size m of matrix: ";
    cin>>m;
    int** matrix=new int*[m];
    for (int i = 0; i < m; ++i) {
        matrix[i]=new int[m];
    }
    string* diagonals=new string[2];
    generator(matrix, m);
    founder(matrix, m);
    stringer(matrix, m, diagonals);
    separator(diagonals);
}
